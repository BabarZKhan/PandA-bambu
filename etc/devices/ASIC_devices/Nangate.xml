<?xml version="1.0"?>
<synthesis>
  <flow name="Synthesis">
     <step id="dc_shell" config="Synthesis"/>
  </flow>
  <flow name="Characterization">
     <step id="dc_shell" config="Synthesis"/>
  </flow>
  <dc_shell config="Synthesis">
     <set name="search_path" value="${__dc_search_path__}" condition="${__dc_search_path__}"/>
     <set name="link_library" value="${__dc_link_library__}"/>
     <set name="target_library" value="${__dc_target_library__}"/>

     <!-- Analyze and elaborate design modules -->
     <if condition="${__dc_top__}">
       <then>
         <cmd name="analyze">
           <param name="-f" value="${__dc_top_filetype__}"/>
           <param value="${__dc_HDL_file__}"/>
         </cmd>
         <cmd name="elaborate" value="${__dc_top__}"/>
         <cmd name="set_design_top" value="${__dc_top__}"/>
         <cmd name="current_design" value="${__dc_top__}"/>
       </then>
       <else>
         <cmd name="read_${__dc_top_filetype__}" value="${__dc_HDL_file__}"/>
       </else>
     </if>

     <!-- Link the current netlist with the corresponding initial library -->
     <cmd name="link"/>
     <!-- <cmd name="uniquify"/> -->
     <cmd name="check_design"/>

     <!-- Set design constraints -->
     <cmd name="read_sdc" value="${__dc_constraint_file__}" condition="${__dc_constraint_file__}"/>
     <if condition="${__dc_max_area__}">
       <then>
         <cmd name="set_max_area" value="${__dc_max_area__}"/>
       </then>
       <else>
         <cmd name="set_max_area" value="0"/>
       </else>
     </if>
     <cmd name="set_zero_interconnect_delay_mode" value="true" condition="${__dc_zero_interconnect_delay__}"/>
     <cmd name="set_dont_use" value="${__dc_dont_use__}" condition="${__dc_dont_use__}"/>
     <cmd name="set_max_delay" value="${__dc_max_delay__}" condition="${__dc_max_delay__}">
       <param name="-to" value='[get_ports "*" -filter {@port_direction == out}]'/>
     </cmd>

     <!-- Compile the current design -->
     <set name="startTime" value="[clock clicks -milliseconds]"/>
     <set name="result" value="[compile]" condition="${__dc_compile_effort_medium__}"/>
     <set name="result" value="[compile -area_effort high -map_effort high]" condition="${__dc_compile_effort_high__}"/>
     <set name="result" value="[compile_ultra -no_autoungroup -area_high_effort_script]" condition="${__dc_compile_effort_ultra__}"/>
     <set name="stop_time" value="[clock clicks -milliseconds]"/>
     <set name="Time" value="[expr ($stopTime - $startTime)*1000]"/>
     <cmd name="echo" value='"$Time microseconds per iteration"'/>
     <cmd name="echo" value='"RESULT SYNTHESIS: $result"'/>

     <!-- Save the compiled design -->
     <cmd name="define_name_rules" value="MYRULES">
       <param name="-check_bus_indexing"/>
       <param name="-allowed" value="{a-z 0-9 _ []}"/>
       <param name="-remove_internal_net_bus"/>
       <param name="-flatten_multi_dimension_busses"/>
       <param name="-add_dummy_nets"/><!-- NOTE: the old "-add_dummy_nets_in_verilog_out LABEL_%d" is deprecated -->
     </cmd>
     <cmd name="change_names">
       <param name="-rule" value="MYRULES"/>
       <param name="-hierarchy"/>
     </cmd>
     <cmd name="write_file">
       <param name="-format" value="verilog"/>
       <param name="-output" value="${__dc_target__}"/>
       <param name="-hierarchy"/>
     </cmd>
     <cmd name="write_sdc" value="${__dc_output_dir__}/post_constraints.sdc"/>

     <!-- Write reports -->
     <sh name="rm">
       <param name="-f" value="${__dc_output_dir__}/area_report.log"/>
     </sh>
     <cmd name="report_area" output="${__dc_output_dir__}/area_report.log"/>
     <sh name="rm">
       <param name="-f" value="${__dc_output_dir__}/cell_report.log"/>
     </sh>
     <cmd name="report_cell" output="${__dc_output_dir__}/cell_report.log">
       <param name="-nosplit"/>
     </cmd>
     <sh name="rm">
       <param name="-f" value="${__dc_output_dir__}/time_report.log"/>
     </sh>
     <cmd name="report_timing" output="${__dc_output_dir__}/time_report.log">
       <param name="-nworst" value="10"/>
       <param name="-sig" value="3"/>
     </cmd>
     <if condition="${__dc_report_power__}">
       <then>
         <sh name="rm">
           <param name="-f" value="${__dc_output_dir__}/power_report.log"/>
         </sh>
         <cmd name="report_power" output="${__dc_output_dir__}/power_report.log"/>
       </then>
       <else/>
     </if>

     <cmd name="exit"/>
  </dc_shell>
</synthesis>
