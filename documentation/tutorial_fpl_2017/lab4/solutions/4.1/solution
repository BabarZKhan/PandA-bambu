--- Introduction ---

Before using these solutions you have to do two things.

First, copy all the files you find in this directory, in the same directory of
the lab materials ${some_path}/lab4/materials/4.1/

Then run the following commands to create a subdirectory called tutorial in the
directory of the lab materials.

cd ${some_path}/lab4/materials/4.1/
mkdir tutorial
cd tutorial

Using a separate subdirectory for the solutions allows to separate the files
generated from the commands from the files given by the excercise.
It also allows to cleanup more easily if there are mistakes, without having to
select manually all the file to remove and all the files to preserve.

The following solutions contain commands that are intended to be launched from
inside the newly created tutorial directory and they use relative paths.
Adjust the paths if you want to run them from different locations or if you
placed the files coming from the solutions in some other place.

--- Solutions ---

1)

The xml file necessary to integrate the component in the design is IP.xml.
The command line to generate the design, without simulation is:

bambu ../main.c ../IP.xml --file-input-data=../checksum.v --std=c11


2)

The command line to run the co-simulation is

bambu ../main.c ../IP.xml --file-input-data=../checksum.v --std=c11 --C-no-parse=../checksum.c --simulate --simulator=VERILATOR


3)

An example of testbench is example_test.xml.
If not instructed otherwise bambu looks for a file named test.xml to use as
specification of the testbenches. If the file is available it is used to
generate the testbench. If is not available, bambu automatically generates one
with random values.
NOTE: the random values are not guarateed to be correct and to performa a
correct simulation. If the code expects some relationships between th input
values you have to write your own tests to ensure that these relationships are
satisfied.
The command line to instruct bambu to use your own xml file for testbench
generation is the following

bambu ../main.c ../IP.xml --file-input-data=../checksum.v --std=c11 --C-no-parse=../checksum.c --simulate --simulator=VERILATOR --generate-tb=../example_test.xml

